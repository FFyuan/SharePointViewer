/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-08-10 at 13:54:51 UTC 
 * Modify at your own risk.
 */

package com.appspot.yuanx_sharepoint_viewer.sharepointviewer.model;

/**
 * Model definition for Sharepoint.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the sharepointviewer. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Sharepoint extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("add_date")
  private String addDate;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String detail;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String entityKey;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String title;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("user_key")
  private String userKey;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("user_nickname")
  private String userNickname;

  /**
   * @return value or {@code null} for none
   */
  public String getAddDate() {
    return addDate;
  }

  /**
   * @param addDate addDate or {@code null} for none
   */
  public Sharepoint setAddDate(String addDate) {
    this.addDate = addDate;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getDetail() {
    return detail;
  }

  /**
   * @param detail detail or {@code null} for none
   */
  public Sharepoint setDetail(String detail) {
    this.detail = detail;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getEntityKey() {
    return entityKey;
  }

  /**
   * @param entityKey entityKey or {@code null} for none
   */
  public Sharepoint setEntityKey(String entityKey) {
    this.entityKey = entityKey;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getTitle() {
    return title;
  }

  /**
   * @param title title or {@code null} for none
   */
  public Sharepoint setTitle(String title) {
    this.title = title;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getUserKey() {
    return userKey;
  }

  /**
   * @param userKey userKey or {@code null} for none
   */
  public Sharepoint setUserKey(String userKey) {
    this.userKey = userKey;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getUserNickname() {
    return userNickname;
  }

  /**
   * @param userNickname userNickname or {@code null} for none
   */
  public Sharepoint setUserNickname(String userNickname) {
    this.userNickname = userNickname;
    return this;
  }

  @Override
  public Sharepoint set(String fieldName, Object value) {
    return (Sharepoint) super.set(fieldName, value);
  }

  @Override
  public Sharepoint clone() {
    return (Sharepoint) super.clone();
  }

}
